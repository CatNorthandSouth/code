<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ts.mapper.BsPostCollectMapper" >
  <resultMap id="BaseResultMap" type="cn.ts.entity.BsPostCollect" >
    <id column="collect_id" property="collectId" jdbcType="INTEGER" />
    <result column="collect_post_title" property="collectPostTitle" jdbcType="VARCHAR" />
    <result column="collect_post_admin" property="collectPostAdmin" jdbcType="VARCHAR" />
    <result column="collect_post_time" property="collectPostTime" jdbcType="TIMESTAMP" />
    <result column="collect_post_id" property="collectPostId" jdbcType="INTEGER" />
    <result column="collect_admin_id" property="collectAdminId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    collect_id, collect_post_title, collect_post_admin, collect_post_time, collect_post_id, 
    collect_admin_id
  </sql>
  <select id="selectByPostAdminIdAndPostid" resultMap="BaseResultMap" parameterType="cn.ts.entity.BsPostCollect" >
    select 
    <include refid="Base_Column_List" />
    from bs_post_collect
    where collect_admin_id = #{collectAdminId,jdbcType=INTEGER} and collect_post_id=#{collectPostId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPostAdminId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_post_collect
    where collect_admin_id = #{collectAdminId,jdbcType=INTEGER}
  </select>

  
  <select id="selectByCollectPostAdmin" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bs_post_collect
    where collect_post_admin = #{collectPostAdmin,jdbcType=VARCHAR}
  </select>
  <select id="selectByAllCollectPostAdmin" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bs_post_collect
    where collect_post_admin = #{collectPostAdmin,jdbcType=VARCHAR}
  </select>
  <delete id="deleteBycollectId" parameterType="java.lang.Integer" >
    delete from bs_post_collect
    where collect_id = #{collectId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBycollectPostId" parameterType="java.lang.Integer" >
    delete from bs_post_collect
    where collect_post_id = #{collectPostId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.ts.entity.BsPostCollect" >
    insert into bs_post_collect (collect_id, collect_post_title, collect_post_admin, 
      collect_post_time, collect_post_id, collect_admin_id
      )
    values (#{collectId,jdbcType=INTEGER}, #{collectPostTitle,jdbcType=VARCHAR}, #{collectPostAdmin,jdbcType=VARCHAR}, 
      #{collectPostTime,jdbcType=TIMESTAMP}, #{collectPostId,jdbcType=INTEGER}, #{collectAdminId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertCollectPost" parameterType="cn.ts.entity.BsPostCollect" >
     insert into bs_post_collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="collectId != null" >
        collect_id,
      </if>
      <if test="collectPostTitle != null" >
        collect_post_title,
      </if>
      <if test="collectPostAdmin != null" >
        collect_post_admin,
      </if>
      <if test="collectPostTime != null" >
        collect_post_time,
      </if>
      <if test="collectPostId != null" >
        collect_post_id,
      </if>
      <if test="collectAdminId != null" >
        collect_admin_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="collectId != null" >
        #{collectId,jdbcType=INTEGER},
      </if>
      <if test="collectPostTitle != null" >
        #{collectPostTitle,jdbcType=VARCHAR},
      </if>
      <if test="collectPostAdmin != null" >
        #{collectPostAdmin,jdbcType=VARCHAR},
      </if>
      <if test="collectPostTime != null" >
        #{collectPostTime,jdbcType=TIMESTAMP},
      </if>
      <if test="collectPostId != null" >
        #{collectPostId,jdbcType=INTEGER},
      </if>
      <if test="collectAdminId != null" >
        #{collectAdminId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ts.entity.BsPostCollect" >
     update bs_post_collect
    <set >
      <if test="collectPostTitle != null" >
        collect_post_title = #{collectPostTitle,jdbcType=VARCHAR},
      </if>
      <if test="collectPostAdmin != null" >
        collect_post_admin = #{collectPostAdmin,jdbcType=VARCHAR},
      </if>
      <if test="collectPostTime != null" >
        collect_post_time = #{collectPostTime,jdbcType=TIMESTAMP},
      </if>
      <if test="collectPostId != null" >
        collect_post_id = #{collectPostId,jdbcType=INTEGER},
      </if>
      <if test="collectAdminId != null" >
        collect_admin_id = #{collectAdminId,jdbcType=INTEGER},
      </if>
    </set>
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ts.entity.BsPostCollect" >
    update bs_post_collect
    set collect_post_title = #{collectPostTitle,jdbcType=VARCHAR},
      collect_post_admin = #{collectPostAdmin,jdbcType=VARCHAR},
      collect_post_time = #{collectPostTime,jdbcType=TIMESTAMP},
      collect_post_id = #{collectPostId,jdbcType=INTEGER},
      collect_admin_id = #{collectAdminId,jdbcType=INTEGER}
    where collect_id = #{collectId,jdbcType=INTEGER}
  </update>
</mapper>