<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ts.mapper.BsReplyZanMapper" >
  <resultMap id="BaseResultMap" type="cn.ts.entity.BsReplyZan" >
    <id column="reply_id" property="replyId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    reply_id, user_id, state
  </sql>
  <select id="selectReplyZan" resultMap="BaseResultMap" parameterType="cn.ts.entity.BsReplyZan" >
    select *
    from bs_reply_zan
    where reply_id = #{replyId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
  </select>  
  
  <select id="selectReplyGoogZan" resultType="java.lang.Integer" parameterType="cn.ts.entity.BsReplyZan" >
    select count(*)
    from bs_reply_zan
    where reply_id = #{replyId,jdbcType=INTEGER} and state = 1
  </select>
  <select id="selectReplyBadZan" resultType="java.lang.Integer" parameterType="cn.ts.entity.BsReplyZan" >
    select count(*)
    from bs_reply_zan
    where reply_id = #{replyId,jdbcType=INTEGER} and state = 0
  </select>  
  <delete id="deleteReplyZan" parameterType="cn.ts.entity.BsReplyZan"  >
    delete from bs_reply_zan
    where reply_id = #{replyId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.ts.entity.BsReplyZan" >
    insert into bs_reply_zan (reply_id, user_id, state
      )
    values (#{replyId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.ts.entity.BsReplyZan" >
    insert into bs_reply_zan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="replyId != null" >
        reply_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="replyId != null" >
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ts.entity.BsReplyZan" >
    update bs_reply_zan
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ts.entity.BsReplyZan" >
    update bs_reply_zan
    set user_id = #{userId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where reply_id = #{replyId,jdbcType=INTEGER}
  </update>
</mapper>